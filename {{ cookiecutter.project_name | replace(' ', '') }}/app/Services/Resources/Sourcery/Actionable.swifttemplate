<%- include("Actionable+Helpers") %>
<% for type in (types.implementing["Actionable"] ?? []) { %>
<% let lowerFirstTypeName = lowerFirstCamelCaseGroup(type.name) -%>
// MARK: - <%= type.name %>
<%= type.accessLevel %> protocol <%= type.name %>Delegate: class {
    func <%= lowerFirstTypeName %>(_ <%= variableName(fromTypeName: type.name) %>: <%= type.name %>, didNotify action: <%= type.name %>.Action)
}

<%= type.accessLevel %> extension <%= type.name %> {

    typealias ActionType = Action
    typealias Delegate = <%= type.name %>Delegate

    func notify(_ action: ActionType) {
        delegate?.<%= lowerFirstTypeName %>(self, didNotify: action)
    }

}
<% } -%>
